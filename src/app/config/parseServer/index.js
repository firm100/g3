"use strict";
var path = require("path");
var models = require("../../../models");
function getParseServerDockerfile(g3Config) {
    return "FROM node:latest\n\nRUN mkdir parse\n\nADD . /parse\nWORKDIR /parse\nRUN npm install\n\n## ENV\n# Optional (default : '" + g3Config.parse.appId + "')\n#ENV APP_ID\n# Optional (default : '" + g3Config.parse.masterKey + "')\n#ENV MASTER_KEY\n# Optional (default : '" + g3Config.parse.databaseURI + "')\n#ENV DATABASE_URI\n# Optional (default : " + g3Config.parse.port + ")\n#ENV PORT\n# Optional (default : '/parse')\n#ENV PARSE_MOUNT\n# Optional (default : 'http://localhost:" + g3Config.parse.port + "/parse')\n#ENV SERVER_URL\n# Optional (default : '" + g3Config.cloudCode + "')\n#ENV CLOUD_CODE\n# Optional (default : " + g3Config.parse.dashboard + ")\n#ENV DASHBOARD\n# Optional (default : '" + g3Config.parse.dashboardUser + "')\n#ENV DASHBOARD_USER\n# Optional (default : '" + g3Config.parse.dashboardPass + "')\n#ENV DASHBOARD_PASS\n\nEXPOSE " + g3Config.parse.port + "\n\nCMD [ \"node\", \"./server.js\" ]";
}
exports.getParseServerDockerfile = getParseServerDockerfile;
function getParseServerJs(g3Config) {
    var comments = 'node ./.g3/cli/parse/server.js';
    var cloud = path.resolve(g3Config._appPath, g3Config.cloudCode, 'main.js');
    if (g3Config._command === models.Const.COMMAND_BUILD) {
        comments = 'node ./server.js';
    }
    return "/* " + comments + " */\nvar path = require('path')\nvar express = require('express');\nvar Parse = require('parse/node');\nvar ParseServer = require('parse-server').ParseServer;\nvar ParseDashboard = require('parse-dashboard');\n\nvar appId = process.env.APP_ID || '" + g3Config.parse.appId + "';\nvar masterKey = process.env.MASTER_KEY || '" + g3Config.parse.masterKey + "';\nvar databaseURI = process.env.DATABASE_URI || '" + g3Config.parse.databaseURI + "';\nvar port = process.env.PORT || " + g3Config.parse.port + ";\nvar mountPath = process.env.PARSE_MOUNT || '/parse';\nvar serverURL = process.env.SERVER_URL || 'http://localhost:' + port + mountPath;\nvar cloudCode = process.env.CLOUD_CODE || '" + g3Config.cloudCode + "';\nvar cloud = " + ((g3Config._command !== models.Const.COMMAND_BUILD) ? "'" + cloud + "'" : "path.resolve(__dirname, cloudCode, 'main.js')") + ";\nvar dashboard = process.env.DASHBOARD || " + g3Config.parse.dashboard + ";\nconst user = process.env.DASHBOARD_USER || '" + g3Config.parse.dashboardUser + "';\nconst pass = process.env.DASHBOARD_PASS || '" + g3Config.parse.dashboardPass + "';\n\nParse.initialize(appId);\nParse.serverURL = serverURL;\nParse.masterKey = masterKey;\nParse.Cloud.useMasterKey();\n\nvar server = express();\n\nserver.use(mountPath, new ParseServer({\n  databaseURI: databaseURI,\n  cloud: cloud,\n  appId: appId,\n  masterKey: masterKey,\n  serverURL: serverURL,\n}));\n\nif (dashboard) {\n  let users;\n  if (user && pass) {\n    users = [{user, pass}];\n  }\n  server.use('/dashboard', new ParseDashboard({\n    apps: [{\n      serverURL: '/parse',\n      appId: appId,\n      masterKey: masterKey,\n      appName: appId\n    }],\n    users\n  }, true));\n  server.use('/', (req, res) => res.redirect('/dashboard'));\n}\n\nserver.listen(port, function () {\n  return console.log('Parse-Server running at ' + serverURL);\n});\n";
}
exports.getParseServerJs = getParseServerJs;
//# sourceMappingURL=index.js.map